# More info on config here: https://golangci-lint.run/usage/configuration/#config-file
version: "2"

linters:
  #disable-all: true
  enable:
    - bodyclose
    #- depguard
    - dogsled
    - dupl
    - errcheck
    - copyloopvar
    #- funlen
    #- gochecknoinits
    - goconst
    #- gocritic
    - gocyclo
    #- gofmt
    #- goimports
    - mnd
    - goprintffuncname
    - gosec
    #- gosimple
    - govet
    - ineffassign
    #- lll
    - misspell
    - nakedret
    - noctx
    #- nolintlint
    - staticcheck
    #- stylecheck
    #- typecheck
    - unconvert
    - unparam
    - unused
    - whitespace

  # don't enable:
  # - asciicheck
  # - scopelint
  # - gochecknoglobals
  # - gocognit
  # - godot
  # - godox
  # - goerr113
  # - interfacer
  # - maligned
  # - nestif
  # - prealloc
  # - testpackage
  # - revive
  # - wsl
  settings:
    dupl:
      threshold: 100
    funlen:
      lines: 100
      statements: 50
    goconst:
      min-len: 2
      min-occurrences: 3
    gocritic:
      enabled-tags:
        - diagnostic
        - experimental
        - opinionated
        - performance
        - style
      disabled-checks:
        - dupImport # https://github.com/go-critic/go-critic/issues/845
        - ifElseChain
        - octalLiteral
        - whyNoLint
    gocyclo:
      min-complexity: 31
    mnd:
      # don't include the "operation" and "assign"
      checks:
        - argument
        - case
        - condition
        - return
      ignored-numbers:
        - "0"
        - "1"
        - "2"
        - "3"
      ignored-functions:
        - strings.SplitN

    govet:
      disable-all: true
      enable:
        # Check for missing values after append.
        - appends
        # Report mismatches between assembly files and Go declarations.
        - asmdecl
        # Check for useless assignments.
        - assign
        # Check for common mistakes using the sync/atomic package.
        - atomic
        # Check for non-64-bits-aligned arguments to sync/atomic functions.
        - atomicalign
        # Check for common mistakes involving boolean operators.
        - bools
        # Check //go:build and // +build directives.
        - buildtag
        # Detect some violations of the cgo pointer passing rules.
        - cgocall
        # Check for unkeyed composite literals.
        - composites
        # Check for locks erroneously passed by value.
        - copylocks
        # Check for calls of reflect.DeepEqual on error values.
        - deepequalerrors
        # Report common mistakes in defer statements.
        - defers
        # Check Go toolchain directives such as //go:debug.
        - directive
        # Report passing non-pointer or non-error values to errors.As.
        - errorsas
        # Find structs that would use less memory if their fields were sorted.
        #- fieldalignment
        # Find calls to a particular function.
        - findcall
        # Report assembly that clobbers the frame pointer before saving it.
        - framepointer
        # Check for mistakes using HTTP responses.
        - httpresponse
        # Detect impossible interface-to-interface type assertions.
        - ifaceassert
        # Check references to loop variables from within nested functions.
        - loopclosure
        # Check cancel func returned by context.WithCancel is called.
        - lostcancel
        # Check for useless comparisons between functions and nil.
        - nilfunc
        # Check for redundant or impossible nil comparisons.
        - nilness
        # Check consistency of Printf format strings and arguments.
        - printf
        # Check for comparing reflect.Value values with == or reflect.DeepEqual.
        - reflectvaluecompare
        # Check for possible unintended shadowing of variables.
        - shadow
        # Check for shifts that equal or exceed the width of the integer.
        - shift
        # Check for unbuffered channel of os.Signal.
        - sigchanyzer
        # Check for invalid structured logging calls.
        - slog
        # Check the argument type of sort.Slice.
        - sortslice
        # Check signature of methods of well-known interfaces.
        - stdmethods
        # Report uses of too-new standard library symbols.
        - stdversion
        # Check for string(int) conversions.
        - stringintconv
        # Check that struct field tags conform to reflect.StructTag.Get.
        - structtag
        # Report calls to (*testing.T).Fatal from goroutines started by a test.
        - testinggoroutine
        # Check for common mistaken usages of tests and examples.
        #- tests
        # Check for calls of (time.Time).Format or time.Parse with 2006-02-01.
        - timeformat
        # Report passing non-pointer or non-interface values to unmarshal.
        - unmarshal
        # Check for unreachable code.
        - unreachable
        # Check for invalid conversions of uintptr to unsafe.Pointer.
        - unsafeptr
        # Check for unused results of calls to some functions.
        - unusedresult
        # Checks for unused writes.
        - unusedwrite
        # Check for misuses of sync.WaitGroup.
        - waitgroup
      settings:
        printf:
          funcs:
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
    gosec:
      excludes:
        - G103
        - G104
        - G304
    staticcheck:
      checks:
        [
          "all",
          "-ST1000",
          "-ST1001",
          "-QF1008",
          "-QF1001",
          "-ST1003",
          "-ST1016",
          "-ST1020",
          "-ST1021",
          "-ST1022",
        ]
    lll:
      line-length: 140
    misspell:
      locale: US
    nolintlint:
      allow-unused: false # report any unused nolint directives
      require-explanation: false # don't require an explanation for nolint directives
      require-specific: false # don't require nolint directives to be specific about which linter is being skipped
  exclusions:
    rules:
      - path: _test\.go
        linters:
          - mnd
          - gocyclo
          - errcheck
          - dupl
          - gosec
      - path: internal/expr-encoders
        linters:
          - govet
          - goconst
    paths:
      - _test\.go
      - _mock\.go
      - _gen\.go
      - \.pb\.go$
      - \.pb\.gw\.go$
      - bin
      - vendor
      - 3d-party
      - var
      - tmp
      - internal/3d-party

formatters:
  # Enable specific formatter.
  # Default: [] (uses standard Go formatting)
  enable:
    - gci
    - gofmt
    #- gofumpt
    - goimports
    #- golines
  settings:
    gci:
      # Section configuration to compare against.
      # Section names are case-insensitive and may contain parameters in ().
      # The default order of sections is `standard > default > custom > blank > dot > alias > localmodule`,
      # If `custom-order` is `true`, it follows the order of `sections` option.
      # Default: ["standard", "default"]
      custom-order: true
      sections:
        - standard # Standard section: captures all standard packages.
        - prefix(github.com/PRO-Robotech/nftrace) # Custom section: groups all imports with the specified Prefix.
        - default # Default section: contains all imports that could not be matched to another section type.
  exclusions:
    paths:
      - _test\.go
      - _mock\.go
      - _gen\.go
      - \.pb\.go$
      - \.pb\.gw\.go$
      - bin
      - vendor
      - 3d-party
      - var
      - tmp
      - internal/3d-party
      - internal/expr-encoders

issues:
  max-same-issues: 10
#   # Excluding configuration per-path, per-linter, per-text and per-source
#   exclude-rules:
#     - path: _test\.go
#       linters:
#         - mnd

#     - path: pkg/golinters/errcheck.go
#       text: "SA1019: errCfg.Exclude is deprecated: use ExcludeFunctions instead"
#     - path: pkg/commands/run.go
#       text: "SA1019: lsc.Errcheck.Exclude is deprecated: use ExcludeFunctions instead"
#     - path: pkg/commands/run.go
#       text: "SA1019: e.cfg.Run.Deadline is deprecated: Deadline exists for historical compatibility and should not be used."

#     - path: pkg/golinters/gofumpt.go
#       text: "SA1019: settings.LangVersion is deprecated: use the global `run.go` instead."
#     - path: pkg/golinters/staticcheck_common.go
#       text: "SA1019: settings.GoVersion is deprecated: use the global `run.go` instead."
#     - path: pkg/lint/lintersdb/manager.go
#       text: "SA1019: (.+).(GoVersion|LangVersion) is deprecated: use the global `run.go` instead."
#     - path: pkg/golinters/unused.go
#       text: "rangeValCopy: each iteration copies 160 bytes \\(consider pointers or indexing\\)"
#   exclude-dirs:
#     - bin
#     - vendor
#     - 3d-party
#     - var
#     - tmp
#     - internal/3d-party
#   exclude-files:
#     - \.pb\.go$
#     - \.pb\.gw\.go$

output:
  formats:
    text:
      print-linter-name: true
      print-issued-lines: true
      colors: true

run:
  timeout: 5m
  issues-exit-code: 5
  tests: false
  # skip-dirs:
  #   - bin
  #   - vendor
  #   - 3d-party
  #   - var
  #   - tmp
  #   - internal/3d-party
  # skip-files:
  #   - \.pb\.go$
  #   - \.pb\.gw\.go$
  #skip-dirs-use-default: true
  #modules-download-mode: readonly|vendor|mod
  modules-download-mode: readonly
